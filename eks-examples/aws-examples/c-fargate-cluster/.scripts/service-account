#!/bin/bash

what=$1
if [ -z "${what}" ]
then
    echo "default to apply"
    what="a"
fi

CLUSTER="c-fargate-cluster"
POLICY="eks-c-fargate-cluter-sa-policy"
NAMESPACE="test-fargate"
name="default-service-account"

create() {
  oidc_id=$(aws eks describe-cluster --name ${CLUSTER} --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
  exists=$(aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4)

  if [ -n "${exists}" ]
  then
    echo "An IAM OIDC provider for the cluster already exists"
  else
    eksctl utils associate-iam-oidc-provider --cluster ${CLUSTER} --approve
  fi

  eksctl create iamserviceaccount --name ${name} \
    --namespace ${NAMESPACE} \
    --cluster ${CLUSTER} \
    --override-existing-serviceaccounts \
    --role-name ${CLUSTER}-default-service-account-role \
    --attach-policy-arn arn:aws:iam::939653976686:policy/${POLICY} \
    --approve
}

delete() {
  # delete the service account
  eksctl delete iamserviceaccount \
      --region us-east-1 \
      --name ${name} \
      --namespace ${NAMESPACE} \
      --cluster ${CLUSTER}


  resources=$(aws resourcegroupstaggingapi get-resources \
      --tag-filters Key=alpha.eksctl.io/cluster-name,Values=${CLUSTER} \
      --resource-type-filters "iam:oidc-provider")

  list=$(echo ${resources} | jq '.ResourceTagMappingList')

  lengh=$(echo ${list} | jq length)
  if [ "${lengh}" -eq "0" ]; then
    echo "No associated iam:oidc-provider found. Skipping"
  fi


  # delete the openid providers associated to the cluster
  echo ${list} | jq -c '.[]' | while read i; do
      arn=$(echo $i | jq '.ResourceARN')
      arn=${arn//\"/}
      
      aws iam delete-open-id-connect-provider \
          --open-id-connect-provider-arn ${arn}

      echo "deleted ${arn}"
  done
}


case "${what}" in
    "a")
        create
        ;;
    "d")
        delete
        ;;
    *)
        echo "Nothing to do for ${what}. Available options: a, d"
        ;; 
esac

