#!/bin/bash


SCRIPT_PATH="$(realpath "$(dirname -- "${BASH_SOURCE[0]}")")"

HOST_GLUE_WORKSPACE="$SCRIPT_PATH/../../../glue"
CONTAINER_GLUE_WORKSPACE="/home/hadoop/workspace/"

IMAGE="public.ecr.aws/glue/aws-glue-libs:5.0.3"
CONTAINER_NAME="glue_libs_5.0_iceberg_example"

if [ "$1" == "-d" ]; then
    read -p "Are you sure to delete the docker container $CONTAINER_NAME? (y/N) " -n 1 -r

    if [[ "$REPLY" =~ ^[Yy]$ ]]; then
        if [ "$(docker container ls -a | grep "$CONTAINER_NAME")" ]; then
            echo -e "\nClearing the $CONTAINER_NAME"
            docker container rm "$CONTAINER_NAME"
        else
            echo -e "\n$CONTAINER_NAME does not exist"
        fi
    fi

    exit 0
fi

if [ ! "$(docker container ls -a | grep "$CONTAINER_NAME")" ]; then

    AWS_PROFILE="default"
    CREDENTIAL=$(aws sts --profile $AWS_PROFILE get-session-token | jq .Credentials)
    if [ -z "$CREDENTIAL" ]; then
        echo "Unable to get the AWS credentials"
        exit 1
    fi

    AWS_ACCESS_KEY_ID=$(echo $CREDENTIAL | jq -r .AccessKeyId)
    AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIAL | jq -r .SecretAccessKey)
    AWS_SESSION_TOKEN=$(echo $CREDENTIAL | jq -r .SessionToken)

    docker run -it \
        -v $HOST_GLUE_WORKSPACE:$CONTAINER_GLUE_WORKSPACE:rw \
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
        -w $CONTAINER_GLUE_WORKSPACE \
        --name "$CONTAINER_NAME" \
        "$IMAGE"

else
    docker container start -i "$CONTAINER_NAME"
fi
